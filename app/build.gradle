apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-noarg'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "br.com.felipepalm14.eventour"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //test
    def coroutine_version = '1.3.4'
    def mockito_version = '3.3.3'
    def arch_core_version = '2.1.0'
    testImplementation "androidx.arch.core:core-testing:${arch_core_version}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutine_version}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutine_version}"
    testImplementation "org.mockito:mockito-core:${mockito_version}"
    testImplementation "org.mockito:mockito-inline:${mockito_version}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    //timber
    implementation "com.jakewharton.timber:timber:4.7.1"

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5"

    //dagger
    def dagger_version = '2.24'
    implementation "com.google.dagger:dagger:${dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${dagger_version}"
    implementation "com.google.dagger:dagger-android-support:${dagger_version}"
    kapt "com.google.dagger:dagger-android-processor:${dagger_version}"

    //lifecycle
    def lifecycle_version = "2.2.0"

    implementation "androidx.fragment:fragment-ktx:1.2.5"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycle_version}"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycle_version}"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${lifecycle_version}"

    implementation "androidx.lifecycle:lifecycle-extensions:${lifecycle_version}"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:${lifecycle_version}"


    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:${lifecycle_version}"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:${lifecycle_version}"

    //navigation
    def navigation_version = '2.3.0'
    implementation "androidx.navigation:navigation-ui-ktx:${navigation_version}"
    implementation "androidx.navigation:navigation-fragment-ktx:${navigation_version}"

    //network
    def retrofit_version = '2.8.1'
    def okhttp_version = '4.5.0'
    implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    implementation "com.squareup.okhttp3:okhttp:${okhttp_version}"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    implementation 'com.google.code.gson:gson:2.8.6'


    // Room
    def room_version = '2.2.5'
    implementation "androidx.room:room-runtime:${room_version}"
    kapt "androidx.room:room-compiler:${room_version}"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    //binding
    kapt "com.android.databinding:compiler:3.1.4"

    def recyclerview_version = '1.1.0'
    implementation "androidx.recyclerview:recyclerview:${recyclerview_version}"
    implementation "androidx.cardview:cardview:1.0.0"

    implementation "com.github.bumptech.glide:glide:4.11.0"

    implementation "com.google.android.material:material:1.2.0"

}